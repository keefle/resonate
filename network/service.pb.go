// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package network

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

// Create
type CreateRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

// Remove
type RemoveRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RemoveRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Rename
type RenameRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Oldname              string   `protobuf:"bytes,2,opt,name=oldname,proto3" json:"oldname,omitempty"`
	Newname              string   `protobuf:"bytes,3,opt,name=newname,proto3" json:"newname,omitempty"`
	Newdirpath           string   `protobuf:"bytes,4,opt,name=newdirpath,proto3" json:"newdirpath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameRequest) Reset()         { *m = RenameRequest{} }
func (m *RenameRequest) String() string { return proto.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()    {}
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *RenameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameRequest.Unmarshal(m, b)
}
func (m *RenameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameRequest.Marshal(b, m, deterministic)
}
func (m *RenameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameRequest.Merge(m, src)
}
func (m *RenameRequest) XXX_Size() int {
	return xxx_messageInfo_RenameRequest.Size(m)
}
func (m *RenameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenameRequest proto.InternalMessageInfo

func (m *RenameRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RenameRequest) GetOldname() string {
	if m != nil {
		return m.Oldname
	}
	return ""
}

func (m *RenameRequest) GetNewname() string {
	if m != nil {
		return m.Newname
	}
	return ""
}

func (m *RenameRequest) GetNewdirpath() string {
	if m != nil {
		return m.Newdirpath
	}
	return ""
}

// Mkdir
type MkdirRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkdirRequest) Reset()         { *m = MkdirRequest{} }
func (m *MkdirRequest) String() string { return proto.CompactTextString(m) }
func (*MkdirRequest) ProtoMessage()    {}
func (*MkdirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *MkdirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkdirRequest.Unmarshal(m, b)
}
func (m *MkdirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkdirRequest.Marshal(b, m, deterministic)
}
func (m *MkdirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkdirRequest.Merge(m, src)
}
func (m *MkdirRequest) XXX_Size() int {
	return xxx_messageInfo_MkdirRequest.Size(m)
}
func (m *MkdirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MkdirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MkdirRequest proto.InternalMessageInfo

func (m *MkdirRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MkdirRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MkdirRequest) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

// Write
type WriteRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *WriteRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *WriteRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func init() {
	proto.RegisterType((*Void)(nil), "network.Void")
	proto.RegisterType((*CreateRequest)(nil), "network.CreateRequest")
	proto.RegisterType((*RemoveRequest)(nil), "network.RemoveRequest")
	proto.RegisterType((*RenameRequest)(nil), "network.RenameRequest")
	proto.RegisterType((*MkdirRequest)(nil), "network.MkdirRequest")
	proto.RegisterType((*WriteRequest)(nil), "network.WriteRequest")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x25, 0x4d, 0x48, 0xc5, 0x91, 0x2c, 0x96, 0xa8, 0x22, 0x06, 0x54, 0x65, 0xea, 0x14, 0x54,
	0x18, 0xf8, 0x01, 0x48, 0x0c, 0xa0, 0x32, 0x78, 0x80, 0xd9, 0xe0, 0x2b, 0x58, 0x6d, 0xec, 0xe2,
	0x98, 0xe6, 0x2f, 0xf0, 0xb3, 0x91, 0x2f, 0xa1, 0x72, 0x55, 0x3e, 0x84, 0xd4, 0xed, 0xdd, 0x7b,
	0x7a, 0xf7, 0x9c, 0x7b, 0x81, 0xbc, 0x41, 0xbb, 0x56, 0xcf, 0x58, 0xad, 0xac, 0x71, 0x86, 0x0d,
	0x35, 0xba, 0xd6, 0xd8, 0x45, 0x99, 0x42, 0xf2, 0x60, 0x94, 0x2c, 0xef, 0x20, 0xbf, 0xb6, 0x28,
	0x1c, 0x72, 0x7c, 0x7b, 0xc7, 0xc6, 0x31, 0x06, 0xc9, 0x4a, 0xb8, 0xd7, 0x22, 0x1a, 0x47, 0x93,
	0x23, 0x4e, 0xd8, 0x73, 0x5a, 0xd4, 0x58, 0x0c, 0x3a, 0xce, 0x63, 0xcf, 0xd5, 0x46, 0x62, 0x11,
	0x8f, 0xa3, 0x49, 0xce, 0x09, 0x97, 0x57, 0x90, 0x73, 0xac, 0xcd, 0xfa, 0xbf, 0xcb, 0xca, 0xd6,
	0x1b, 0x3d, 0xfa, 0xcd, 0x58, 0xc0, 0xd0, 0x2c, 0x65, 0xe0, 0xfd, 0x1a, 0xbd, 0xa2, 0xb1, 0x25,
	0x25, 0xee, 0x94, 0x7e, 0x64, 0x67, 0x00, 0x1a, 0x5b, 0xa9, 0x2c, 0x6d, 0x4b, 0x48, 0x0c, 0x98,
	0xf2, 0x16, 0xb2, 0xd9, 0x42, 0x2a, 0xbb, 0x8f, 0xaf, 0xbf, 0x87, 0xec, 0xd1, 0xaa, 0x3f, 0x2f,
	0x29, 0x85, 0x13, 0xb4, 0x2b, 0xe3, 0x84, 0xd9, 0x08, 0x52, 0x33, 0x9f, 0x37, 0xe8, 0x68, 0x5b,
	0xcc, 0xfb, 0xe9, 0xe2, 0x63, 0x00, 0xc7, 0x37, 0x6a, 0x89, 0x33, 0xa1, 0xc5, 0x0b, 0x5a, 0x36,
	0x85, 0xb4, 0xab, 0x8a, 0x8d, 0xaa, 0xbe, 0xc6, 0x6a, 0xab, 0xbb, 0xd3, 0x7c, 0xc3, 0x53, 0xb7,
	0x07, 0xec, 0x1c, 0x0e, 0xe9, 0x49, 0xec, 0x64, 0xa3, 0x84, 0x4f, 0xdc, 0x35, 0x4c, 0x21, 0xed,
	0x1a, 0x0c, 0x32, 0xb6, 0x2a, 0xfd, 0x36, 0x83, 0x4e, 0x18, 0x64, 0x84, 0x27, 0xfd, 0x21, 0x83,
	0xae, 0x18, 0x66, 0x04, 0xed, 0xef, 0x58, 0x9e, 0x52, 0xfa, 0x7b, 0x2f, 0x3f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x4a, 0xeb, 0xeb, 0x13, 0xce, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileManagerClient is the client API for FileManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileManagerClient interface {
	// Sends a greeting
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Void, error)
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*Void, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*Void, error)
	Mkdir(ctx context.Context, in *MkdirRequest, opts ...grpc.CallOption) (*Void, error)
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*Void, error)
}

type fileManagerClient struct {
	cc *grpc.ClientConn
}

func NewFileManagerClient(cc *grpc.ClientConn) FileManagerClient {
	return &fileManagerClient{cc}
}

func (c *fileManagerClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/network.FileManager/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileManagerClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/network.FileManager/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileManagerClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/network.FileManager/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileManagerClient) Mkdir(ctx context.Context, in *MkdirRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/network.FileManager/Mkdir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileManagerClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/network.FileManager/Rename", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileManagerServer is the server API for FileManager service.
type FileManagerServer interface {
	// Sends a greeting
	Create(context.Context, *CreateRequest) (*Void, error)
	Write(context.Context, *WriteRequest) (*Void, error)
	Remove(context.Context, *RemoveRequest) (*Void, error)
	Mkdir(context.Context, *MkdirRequest) (*Void, error)
	Rename(context.Context, *RenameRequest) (*Void, error)
}

// UnimplementedFileManagerServer can be embedded to have forward compatible implementations.
type UnimplementedFileManagerServer struct {
}

func (*UnimplementedFileManagerServer) Create(ctx context.Context, req *CreateRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedFileManagerServer) Write(ctx context.Context, req *WriteRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedFileManagerServer) Remove(ctx context.Context, req *RemoveRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedFileManagerServer) Mkdir(ctx context.Context, req *MkdirRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mkdir not implemented")
}
func (*UnimplementedFileManagerServer) Rename(ctx context.Context, req *RenameRequest) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rename not implemented")
}

func RegisterFileManagerServer(s *grpc.Server, srv FileManagerServer) {
	s.RegisterService(&_FileManager_serviceDesc, srv)
}

func _FileManager_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileManagerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.FileManager/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileManagerServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileManager_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileManagerServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.FileManager/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileManagerServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileManager_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileManagerServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.FileManager/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileManagerServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileManager_Mkdir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkdirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileManagerServer).Mkdir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.FileManager/Mkdir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileManagerServer).Mkdir(ctx, req.(*MkdirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileManager_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileManagerServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.FileManager/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileManagerServer).Rename(ctx, req.(*RenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "network.FileManager",
	HandlerType: (*FileManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _FileManager_Create_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _FileManager_Write_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _FileManager_Remove_Handler,
		},
		{
			MethodName: "Mkdir",
			Handler:    _FileManager_Mkdir_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _FileManager_Rename_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
